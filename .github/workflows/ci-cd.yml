name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            **/*.sln
            **/*.csproj

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/*.trx'

  docker-compose-test:
    needs: build-test
    # Only run this job on the main branch or for pull requests targeting main
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install curl and PowerShell Core
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          sudo apt-get install -y powershell

      - name: Build and start services
        run: |
          docker compose up --build -d
          echo "Waiting for services to be ready..."
          sleep 10

      - name: Check if services are running
        run: |
          docker compose ps

      - name: Monitor Health Checks
        run: |
          echo "Checking Vehicles API health..."
          VEHICLES_HEALTHY=false
          for i in {1..10}; do
            if curl -s -f http://localhost:5123/health/ready > /dev/null; then
              echo "Vehicles API is healthy."
              VEHICLES_HEALTHY=true
              break
            else
              echo "Vehicles API not ready, retrying in 2 seconds... ($i/10)"
              sleep 2
            fi
          done
          if [ "$VEHICLES_HEALTHY" = false ]; then
            echo "Vehicles API failed to become healthy in time."
            exit 1
          fi

          echo "Checking Insurances API health..."
          INSURANCES_HEALTHY=false
          for i in {1..10}; do
            if curl -s -f http://localhost:5261/health/ready > /dev/null; then
              echo "Insurances API is healthy."
              INSURANCES_HEALTHY=true
              break
            else
              echo "Insurances API not ready, retrying in 2 seconds... ($i/10)"
              sleep 2
            fi
          done
          if [ "$INSURANCES_HEALTHY" = false ]; then
            echo "Insurances API failed to become healthy in time."
            exit 1
          fi

      - name: Run Smoke Tests
        run: |
          echo "Running smoke tests..."
          pwsh -File ./scripts/compose.ps1 -cmd smoke
          if [ $? -ne 0 ]; then
             echo "Smoke tests failed."
             exit 1
          fi
          echo "Smoke tests passed."

      - name: Tear down services
        if: always()
        run: |
          docker compose down -v --remove-orphans